@model RDSUX.Models.User

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2", id = "userType" })
            <div class="col-md-10">
                @foreach (var type in Model.UserTypes)
                {

                    @Html.RadioButtonFor(model => model.UserType, type.Id, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.Label(type.Name, htmlAttributes: new { @class = "control-label" });

                }
                <input type="hidden" id="hdnUserType" value="@Model.UserType" />
                @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                <span id="errorUsername" style="color:red; display:none;"> User name exists</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            var cssUser = "form-group clsUser hidden";
            if (Model.UserType == 1)
            {
                cssUser = "form-group clsUser";
            }
            else
            {
                cssUser = "form-group clsUser hidden";
            }

        }
        <div class='@cssUser'>
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>
        @{

            var css = "form-group  clsdetiler";
            if (Model.UserType == 2)
            {
                css = "form-group  clsdetiler";
            }
            else
            {
                css = "form-group clsdetiler hidden";
            }
        }

        <div class='@css'>
            @Html.LabelFor(model => model.DateofBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger", type = "date" })
            </div>
        </div>

        <div class='@css'>
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class='@css'>
            @Html.LabelFor(model => model.DateofJoin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateofJoin, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.DateofJoin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class='@css'>
            @Html.LabelFor(model => model.Expereince, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Expereince, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Expereince, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Photo, "", new { @type = "file" })
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section scripts{
    <script>

        $(document).ready(function () {

             $("#UserName").blur(function () {
                var userName = $(this).val();
                $.ajax({
                    url: '@Url.Action("CheckUserName", "User")',
                    data: { name: userName },
                    type: 'POST',
                    success: function (data) {
                        if (data == true) {
                            $('#errorUsername').css('display', 'block');
                            $('#btnSubmit').prop('disabled', true);

                        } else {
                            $('#errorProjectname').css('display', 'none');
                              $('#btnSubmit').prop('disabled', false);

                        }

                    }
                });

            });

            // $('[name="UserType"]').trigger('change');;
        });
        $('[name="UserType"]').change(function () {

            var value = $(this).val();

            if (value == 2) {
                $('.clsdetiler').removeClass('hidden');
                $('.clsUser').addClass('hidden');
            } else if (value == 1) {

                $('.clsUser').removeClass('hidden');
                $('.clsdetiler').addClass('hidden');

            }

        })
    </script>

}